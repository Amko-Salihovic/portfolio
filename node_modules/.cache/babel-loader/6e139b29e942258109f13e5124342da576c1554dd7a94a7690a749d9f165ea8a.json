{"ast":null,"code":"var _jsxFileName = \"/Users/amko/Documents/react-projects/portfolio/src/sections/Experience.jsx\";\nimport Header from \"../components/Header\";\nimport { experience } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-slate-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-20 top-10 flex flex-col justify-center h-screen bg-blue-400\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-right\",\n          children: experience.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl font-semibold\",\n                children: [job.title, \", \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl font-thin\",\n                children: job.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["Header","experience","jsxDEV","_jsxDEV","Experience","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","job","title","company","summary","id","_c","$RefreshReg$"],"sources":["/Users/amko/Documents/react-projects/portfolio/src/sections/Experience.jsx"],"sourcesContent":["import Header from \"../components/Header\";\nimport { experience } from \"../constants\";\n\nconst Experience = () => {\n  return (\n    <main>\n      <Header />\n      <div className=\"text-slate-100\">\n        <div className=\"absolute right-20 top-10 flex flex-col justify-center h-screen bg-blue-400\">\n          <ul className=\"text-right\">\n            {experience.map((job) => (\n              <li key={job.id} className=\"mb-10\">\n                <h1 className=\"mb-2\">\n                  <span className=\"text-2xl font-semibold\">{job.title}, </span>\n                  <span className=\"text-xl font-thin\">{job.company}</span>\n                </h1>\n                <p>{job.summary}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Experience;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA,CAACH,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVN,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC7BF,OAAA;QAAKO,SAAS,EAAC,4EAA4E;QAAAL,QAAA,eACzFF,OAAA;UAAIO,SAAS,EAAC,YAAY;UAAAL,QAAA,EACvBJ,UAAU,CAACU,GAAG,CAAEC,GAAG,iBAClBT,OAAA;YAAiBO,SAAS,EAAC,OAAO;YAAAL,QAAA,gBAChCF,OAAA;cAAIO,SAAS,EAAC,MAAM;cAAAL,QAAA,gBAClBF,OAAA;gBAAMO,SAAS,EAAC,wBAAwB;gBAAAL,QAAA,GAAEO,GAAG,CAACC,KAAK,EAAC,IAAE;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7DN,OAAA;gBAAMO,SAAS,EAAC,mBAAmB;gBAAAL,QAAA,EAAEO,GAAG,CAACE;cAAO;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,eACLN,OAAA;cAAAE,QAAA,EAAIO,GAAG,CAACG;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GALbG,GAAG,CAACI,EAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMX,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACQ,EAAA,GArBIb,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}